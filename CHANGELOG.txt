По перше розділив задачі по папкам, тобто калькулятор задачу 11 рівня закинув в папку Calculator,
задачу 13 рівня закинув до папки SilhouettesFinder та задачу 15 рівня закинув до папки HuffmanArchiver.
Також розділив тести для власних контейнерів по класам, тому тепер кожен клас відповідає тестуванню одного контейнера.

MyHashMap

В класі MyHashMap переробив методи put, get, remove додав константу LOAD_FACTOR яка дорівнює 0.75 і відповідає заповненості елементами масиву
тобто якщо було додано всього в тому числі з урахуванням колізій 75 елементів а розмір масиву 100 тоді він ресайзиться. 
Чому 0.75 тому що це число є оптимальним для використання пам'яті та для швидкодії.

Замість роботи з масивом для створення зв'язків переробив на роботу з посиланнями. Також тепер не перебираю весь масив, 
а іду по індексу введеного ключа при використанні методів put, get, remove. Також обробив можливість додавання ключа який дорівнює null.

Також додав резайз масиву при малій кількості елементів в ньому, коли кількість елементів сягає 
25% від загальної довжинии масиву то масив зменшується в 2 рази.

PriorityQueue

В класі використав інтерфейс comparable для роботи не тільки з Інтеджером а й з іншими класами.
Також розібрався з бінарною купою та тим як її представити у вигляді масиву, тобто a[i] має синів індекс яких розрраховується за формулою 
2 * i + 1 та 2 * і + 2.

Зробив роботу пріоритетної черги більш швидкою за рахунок використання бінарної купи.